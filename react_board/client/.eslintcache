[{"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\index.js":"1","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\App.js":"2","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\_reducer\\index.js":"3","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\EditorComponent.js":"4","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\forum\\ForumComponent.js":"5","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\hoc\\auth.js":"6","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\_reducer\\user_reducer.js":"7","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"8","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"9","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"10","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\forum\\ForumTable.js":"11","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\forum\\TableColumn.js":"12","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\forum\\TableRow.js":"13","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\_actions\\types.js":"14","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\_actions\\user_action.js":"15"},{"size":765,"mtime":1612234082175,"results":"16","hashOfConfig":"17"},{"size":1006,"mtime":1612253321221,"results":"18","hashOfConfig":"17"},{"size":162,"mtime":1612232351643,"results":"19","hashOfConfig":"17"},{"size":2051,"mtime":1612093653055,"results":"20","hashOfConfig":"17"},{"size":3335,"mtime":1612231071159,"results":"21","hashOfConfig":"17"},{"size":1141,"mtime":1612501146726,"results":"22","hashOfConfig":"17"},{"size":470,"mtime":1612232351654,"results":"23","hashOfConfig":"17"},{"size":1022,"mtime":1613440524556,"results":"24","hashOfConfig":"17"},{"size":2561,"mtime":1612504232529,"results":"25","hashOfConfig":"17"},{"size":1919,"mtime":1612253838408,"results":"26","hashOfConfig":"17"},{"size":548,"mtime":1612072485359,"results":"27","hashOfConfig":"17"},{"size":252,"mtime":1612072875142,"results":"28","hashOfConfig":"17"},{"size":203,"mtime":1612071741552,"results":"29","hashOfConfig":"17"},{"size":124,"mtime":1612233061869,"results":"30","hashOfConfig":"17"},{"size":814,"mtime":1612437940992,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1t93leh",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\index.js",["70"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { DatePicker } from \"antd\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport PromiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport Reducer from \"./_reducer/index\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  PromiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\nReactDOM.render(\r\n  \r\n    <Provider\r\n      store={createStoreWithMiddleware(Reducer,      \r\n          window.__REDUX_DEVTOOLS_EXTENSION__ && \r\n          window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      )}\r\n    >\r\n      <App />\r\n    </Provider>\r\n  , document.getElementById(\"root\")\r\n);\r\n\r\n",["71","72"],"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\App.js",[],"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\_reducer\\index.js",[],"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\EditorComponent.js",["73"],"import React, { useState } from \"react\";\r\nimport { reactRouter, withRouter } from \"react-router-dom\";\r\nimport \"./EditorComponent.css\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nfunction EditorComponent(props) {\r\n  // 입력 버튼 클릭하면 게시판 내역으로 라우팅, 저장\r\n\r\n  const [content, setcontent] = useState({ title: \"\", content: \"\" });\r\n\r\n  const getValue = (e) => {\r\n    const { name, value } = e.target;\r\n    setcontent({\r\n      ...content,\r\n      [name]: value,\r\n    });\r\n    // console.log(content); title 입력\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    props.history.push({ pathname: \"/board\", state: { detail: content}  });\r\n  };\r\n\r\n  return (\r\n    <div className=\"fullbody\">\r\n      <div className=\"form-wrapper\">\r\n        <input\r\n          className=\"title-input\"\r\n          type=\"text\"\r\n          placeholder=\"제목\"\r\n          onChange={getValue}\r\n          name=\"title\"\r\n        />\r\n        <CKEditor\r\n          editor={ClassicEditor}\r\n          data=\"<p>ck에디터 입력</p>\"\r\n          onReady={(editor) => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log(\"Editor is ready to use!\", editor);\r\n          }}\r\n          onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            console.log({ event, editor, data });\r\n            setcontent({\r\n              ...content,\r\n              content: data,\r\n            });\r\n            // console.log(content); 내용 입력\r\n          }}\r\n          onBlur={(event, editor) => {\r\n            console.log(\"Blur.\", editor);\r\n          }}\r\n          onFocus={(event, editor) => {\r\n            console.log(\"Focus.\", editor);\r\n          }}\r\n        />\r\n      </div>\r\n      <button className=\"submit-button\" onClick={onSubmitHandler}>\r\n        입력\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(EditorComponent);\r\n\r\n// onclick -> onsubmit으로 바꿔야할 듯 ( 서버 연결 하면)\r\n","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\forum\\ForumComponent.js",["74"],"import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport ForumTable from \"./ForumTable\";\r\nimport TableColumn from \"./TableColumn\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nconst ForumComponent = (props) => {\r\n  useEffect(() => {\r\n    // db에서 받아오는게 목표긴 해 ㅇㅇ;;\r\n    console.log(\"component did mount with useEffect!\");\r\n    console.log(`${getContent.title} , ${removeTag(getContent.content)}`);\r\n  }, []);\r\n\r\n  const getContent = props.location.state.detail; // edit에서 넘어온 데이터 받기\r\n\r\n  console.log(getContent); // { title: , content: }\r\n  console.log(typeof getContent.content);\r\n\r\n  const removeTag = (strTag) => {\r\n    return strTag\r\n      .replace(/<br\\/>/gi, \"\\n\")\r\n      .replace(/<(\\/)?([a-zA-Z]*)(\\s[a-zA-Z]*=[^>]*)?(\\s)*(\\/)?>/gi, \"\"); // 태그 제거\r\n  };\r\n\r\n  function addTable() {\r\n    return (\r\n      <TableRow>\r\n        <TableColumn>6</TableColumn>\r\n        <TableColumn>{getContent.title}</TableColumn>\r\n        <TableColumn>{removeTag(getContent.content)}</TableColumn>\r\n        <TableColumn>5</TableColumn>\r\n      </TableRow>\r\n    );\r\n  }\r\n\r\n  /*  <TableRow>\r\n  <TableColumn>1</TableColumn>  \r\n  <TableColumn>첫번째 게시글입니다.</TableColumn>\r\n  <TableColumn>2021-01-31</TableColumn>\r\n  <TableColumn>6</TableColumn>\r\n</TableRow>   \r\n\r\n1 .이거 생산하는 컴포넌트 작성하기\r\n2. 에디터에서 작성하면 게시판에 구현될 수 있게 연결  --> 데이터 받아왔음, 태그도 제거하고., 이제 흠. db랑 연결을 해봐야할 거같은데\r\n*/\r\nconst move = () => {\r\n  props.history.push('/edit')\r\n}\r\n  return (\r\n    <>\r\n      <ForumTable headersName={[\"글번호\", \"제목\", \"등록일\", \"조회수\"]}>\r\n        <TableRow>\r\n          <TableColumn>1</TableColumn>\r\n          <TableColumn>첫번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>6</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>2</TableColumn>\r\n          <TableColumn>두번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>5</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>3</TableColumn>\r\n          <TableColumn>세번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>1</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>4</TableColumn>\r\n          <TableColumn>네번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>2</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>5</TableColumn>\r\n          <TableColumn>다섯번째 게시글입니다.</TableColumn>\r\n          <TableColumn>2021-01-31</TableColumn>\r\n          <TableColumn>4</TableColumn>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableColumn>5</TableColumn>\r\n          <TableColumn>{getContent.title}</TableColumn>\r\n          <TableColumn>{removeTag(getContent.content)}</TableColumn>\r\n          <TableColumn>4</TableColumn>\r\n        </TableRow>\r\n        {addTable()}\r\n      </ForumTable>\r\n      <button onClick={move}>작성 창</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ForumComponent);\r\n","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\hoc\\auth.js",["75","76"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth } from \"../_actions/user_action\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n  //specificComponent = 안에 넣을 컴포넌트\r\n\r\n  // option  null = 아무나\r\n  //         true = 로그인한 유저,  false = 로그인 안한 유저\r\n\r\n  function AuthenticationCheck(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      dispatch(auth()).then((response) => {\r\n        console.log(response);\r\n\r\n        // 로그인 하지 않은 상태\r\n        if (!response.payload.isAuth) {\r\n          if (option) {\r\n            props.history.push(\"/login\");\r\n          }\r\n        } else {\r\n          // 로그인 된 상태\r\n          // admin이 아닌데 admin전용으로 가려할 때\r\n          if (adminRoute && !response.payload.admin) {\r\n            props.history.push(\"/\");\r\n          } else if (option === false) {\r\n            props.history.push(\"/\");\r\n          }\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    return <SpecificComponent />;\r\n  }\r\n\r\n  return AuthenticationCheck;\r\n}\r\n\r\n","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\_reducer\\user_reducer.js",["77","78","79","80"],"import { LOGIN_USER, REGISTER_USER, AUTH_USER } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return { ...state, loginSuccess: action.payload };\r\n      break;\r\n    case REGISTER_USER:\r\n      return { ...state, register: action.payload };\r\n      break;\r\n    case AUTH_USER:\r\n      return { ...state, userData: action.payload };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["81"],"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["82"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\nimport { reactRouter, withRouter } from \"react-router-dom\";\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [isMatched, setisMatched] = useState(true);\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n  const onConfimrPasswordHandler = (event) => {\r\n    setConfirmPassword(event.currentTarget.value);\r\n  };\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault(); // submit 할 때 page refresh 막기\r\n\r\n    if (Password !== ConfirmPassword) {\r\n      setisMatched(false);\r\n      return ;\r\n    } else {\r\n      setisMatched(true);\r\n    }\r\n\r\n    let body = {\r\n      email: Email,\r\n      password: Password,\r\n      name: Name,\r\n    }; // 이 형태를 백엔드에 보내는 거임\r\n\r\n    dispatch(registerUser(body)) // to action\r\n      .then((response) => {\r\n        if (response.payload.success) {\r\n          props.history.push(\"/login\");\r\n        } else {\r\n          console.log(response);\r\n          alert(\"에러1\")\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <label>Email</label>\r\n        <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n        <label>Name</label>\r\n        <input type=\"text\" value={Name} onChange={onNameHandler} />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n        <label>Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={ConfirmPassword}\r\n          onChange={onConfimrPasswordHandler}\r\n        />\r\n        <br />\r\n        {isMatched ? <h4>일치</h4> : <h4>불일치</h4>}\r\n        <button>회원 가입</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegisterPage);\r\n","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["83"],"import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {loginUser} from '../../../_actions/user_action';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nfunction LoginPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n\r\n    const onEmailHandler = (event) => {\r\n        \r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const onPasswordHander = (event) => {\r\n\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n    const onSubmitHandler= (event) => {\r\n        event.preventDefault(); // submit 할 때 page refresh 막기\r\n\r\n        let body = {\r\n            email: Email,\r\n            password: Password\r\n        } // 이 형태를 백엔드에 보내는 거임\r\n\r\n        dispatch(loginUser(body)) // to action\r\n        .then(response => {\r\n            if (response.payload.loginSuccess){\r\n                props.history.push('/')\r\n            } else {\r\n                alert('Error')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n          }}>\r\n\r\n              <form style={{ display: 'flex', flexDirection: 'column'}}\r\n                onSubmit={onSubmitHandler}\r\n              >\r\n                <label>Email</label>\r\n                <input type=\"email\" value={Email} onChange={onEmailHandler} /> \r\n                <label>Password</label>\r\n                <input type=\"password\" value={Password} onChange={onPasswordHander} /> \r\n                <br />\r\n                <button>\r\n                    Login\r\n                </button>                \r\n              </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage)\r\n","C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\forum\\ForumTable.js",[],"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\forum\\TableColumn.js",[],"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\components\\forum\\TableRow.js",[],"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\_actions\\types.js",[],"C:\\Users\\k\\Desktop\\coding\\react_board\\client\\src\\_actions\\user_action.js",[],{"ruleId":"84","severity":1,"message":"85","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":20},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"84","severity":1,"message":"92","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":12,"column":6,"nodeType":"95","endLine":12,"endColumn":8,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":5,"column":1,"nodeType":"99","endLine":39,"endColumn":2},{"ruleId":"93","severity":1,"message":"100","line":33,"column":8,"nodeType":"95","endLine":33,"endColumn":10,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":1,"nodeType":"99","endLine":17,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":7,"column":7,"nodeType":"104","messageId":"105","endLine":7,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":10,"column":7,"nodeType":"104","messageId":"105","endLine":10,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":13,"column":7,"nodeType":"104","messageId":"105","endLine":13,"endColumn":13},{"ruleId":"84","severity":1,"message":"92","line":3,"column":15,"nodeType":"86","messageId":"87","endLine":3,"endColumn":26},{"ruleId":"84","severity":1,"message":"92","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":21},{"ruleId":"84","severity":1,"message":"106","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":13},"no-unused-vars","'DatePicker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'reactRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getContent.content' and 'getContent.title'. Either include them or remove the dependency array.","ArrayExpression",["109"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["110"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [getContent.content, getContent.title]",{"range":"115","text":"116"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"117","text":"118"},[433,435],"[getContent.content, getContent.title]",[953,955],"[dispatch, props.history]"]